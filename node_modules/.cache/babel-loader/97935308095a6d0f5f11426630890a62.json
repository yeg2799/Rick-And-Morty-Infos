{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emre\\\\Desktop\\\\React js\\\\Rick And Morty Info\\\\my-app\\\\src\\\\components\\\\App\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"../../styles/index.scss\";\nimport Header from \"../Header/Header\";\nimport Content from \"../CenterContent/Content\";\nimport Filter from \"../CenterContent/Filter/Filter\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Aboutme from \"../CenterContent/Aboutme\";\nimport Episodes from \"../CenterContent/Episodes\";\nexport default class index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characterUrl: \"https://rickandmortyapi.com/api/character\",\n      charactersResults: [],\n      characterInfo: [],\n      filterCharacters: [],\n      episodes: [],\n      episodeInfo: [],\n      episodeCharacters: [],\n      url: \"https://rickandmortyapi.com/api/character?page=\",\n      urlEpisode: \"https://rickandmortyapi.com/api/episode\",\n      currentName: \"\",\n      currentGender: \"\",\n      currentStatus: \"\",\n      boolFilter: false\n    };\n\n    this.onChangeHandle = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.getCharacters = url => {\n      fetch(url).then(response => response.json()).then(data => this.setState({\n        charactersResults: data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.getCharacterInfo = url => {\n      fetch(url).then(response => response.json()).then(data => this.setState({\n        characterInfo: data.info\n      })) // .then(data=>console.log(data.info.next))\n      .catch(err => console.log(err));\n    };\n\n    this.getFilterCharacters = (name, gender, status) => {\n      let url = \"https://rickandmortyapi.com/api/character/\";\n\n      if (name || gender || status) {\n        this.setState({\n          boolFilter: true\n        });\n        url += `?name=${name}&gender=${gender}&status=${status}`;\n      }\n\n      fetch(url).then(response => response.json()).then(data => this.setState({\n        filterCharacters: data.results\n      })) // .then(data=>console.log(data.results))\n      .catch(err => console.error(err));\n    };\n\n    this.getAllEpisodes = urlEpisode => {\n      fetch(urlEpisode).then(response => response.json()).then(data => this.setState({\n        episodes: data.results\n      })) // .then(data=>console.log(data))\n      .catch(err => console.error(err));\n    };\n\n    this.getEpisodesInfo = urlEpisode => {\n      fetch(urlEpisode).then(response => response.json()).then(data => this.setState({\n        episodeInfo: data.info\n      })).catch(err => console.log(err));\n    };\n\n    this.getEpisodesCharacters = urlEpisode => {\n      fetch(urlEpisode).then(response => response.json()) // .then(data=>this.setState({episodeInfo:data.result.characters}))\n      .then(data => console.log(data.results)).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.getCharacters(this.state.url);\n    this.getCharacterInfo(this.state.url);\n    this.getAllEpisodes(this.state.urlEpisode);\n    this.getEpisodesInfo(this.state.urlEpisode);\n    this.getEpisodesCharacters(this.state.urlEpisode);\n    this.getFilterCharacters();\n  } //Get Character\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"part-header\",\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row partCenter\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-4 filter\",\n                children: /*#__PURE__*/_jsxDEV(Filter, {\n                  filter: this.getFilterCharacters,\n                  currentName: this.state.currentName,\n                  currentGender: this.state.currentGender,\n                  currentStatus: this.state.currentStatus,\n                  onChangeHandle: this.onChangeHandle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-8\",\n                children: /*#__PURE__*/_jsxDEV(Content, {\n                  boolFilter: this.state.boolFilter,\n                  getCharacters: this.state.charactersResults,\n                  filterCharacters: this.state.filterCharacters,\n                  info: this.state.characterInfo,\n                  characters: this.getCharacters,\n                  url: this.state.url,\n                  infos: this.getCharacterInfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/episodes\",\n              children: /*#__PURE__*/_jsxDEV(Episodes, {\n                getEpisodesInfo: this.getEpisodesInfo,\n                getAllEpisodes: this.getAllEpisodes,\n                episodes: this.state.episodes,\n                episodeInfo: this.state.episodeInfo,\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              children: /*#__PURE__*/_jsxDEV(Aboutme, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Emre/Desktop/React js/Rick And Morty Info/my-app/src/components/App/index.js"],"names":["React","Component","Header","Content","Filter","Switch","Route","Aboutme","Episodes","index","state","characterUrl","charactersResults","characterInfo","filterCharacters","episodes","episodeInfo","episodeCharacters","url","urlEpisode","currentName","currentGender","currentStatus","boolFilter","onChangeHandle","e","setState","target","name","value","getCharacters","fetch","then","response","json","data","results","catch","err","console","log","getCharacterInfo","info","getFilterCharacters","gender","status","error","getAllEpisodes","getEpisodesInfo","getEpisodesCharacters","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../styles/index.scss\";\nimport Header from \"../Header/Header\";\nimport Content from \"../CenterContent/Content\";\nimport Filter from \"../CenterContent/Filter/Filter\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Aboutme from \"../CenterContent/Aboutme\";\nimport Episodes from \"../CenterContent/Episodes\";\nexport default class index extends Component {\n  state = {\n    characterUrl: \"https://rickandmortyapi.com/api/character\",\n    charactersResults: [],\n    characterInfo: [],\n    filterCharacters: [],\n    episodes: [],\n    episodeInfo: [],\n    episodeCharacters: [],\n    url: \"https://rickandmortyapi.com/api/character?page=\",\n    urlEpisode: \"https://rickandmortyapi.com/api/episode\",\n    currentName: \"\",\n    currentGender: \"\",\n    currentStatus: \"\",\n    boolFilter: false,\n  };\n  onChangeHandle = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  componentDidMount() {\n    this.getCharacters(this.state.url);\n    this.getCharacterInfo(this.state.url);\n    this.getAllEpisodes(this.state.urlEpisode);\n    this.getEpisodesInfo(this.state.urlEpisode);\n    this.getEpisodesCharacters(this.state.urlEpisode);\n    this.getFilterCharacters();\n  }\n  //Get Character\n  getCharacters = (url) => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => this.setState({ charactersResults: data.results }))\n      .catch((err) => console.log(err));\n  };\n  //Character info (page vs)\n  getCharacterInfo = (url) => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => this.setState({ characterInfo: data.info }))\n      // .then(data=>console.log(data.info.next))\n      .catch((err) => console.log(err));\n  };\n  //Filter Characters\n  getFilterCharacters = (name, gender, status) => {\n    let url = \"https://rickandmortyapi.com/api/character/\";\n    if (name || gender || status) {\n      this.setState({ boolFilter: true });\n      url += `?name=${name}&gender=${gender}&status=${status}`;\n    }\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => this.setState({ filterCharacters: data.results }))\n      // .then(data=>console.log(data.results))\n      .catch((err) => console.error(err));\n  };\n  //getAllEpisodes\n  getAllEpisodes = (urlEpisode) => {\n    fetch(urlEpisode)\n      .then((response) => response.json())\n      .then((data) => this.setState({ episodes: data.results }))\n      // .then(data=>console.log(data))\n      .catch((err) => console.error(err));\n  };\n  //Epispode Info\n  getEpisodesInfo = (urlEpisode) => {\n    fetch(urlEpisode)\n      .then((response) => response.json())\n      .then((data) => this.setState({ episodeInfo: data.info }))\n      .catch((err) => console.log(err));\n  };\n  getEpisodesCharacters = (urlEpisode) => {\n    fetch(urlEpisode)\n      .then((response) => response.json())\n      // .then(data=>this.setState({episodeInfo:data.result.characters}))\n      .then((data) => console.log(data.results))\n      .catch((err) => console.log(err));\n  };\n  render() {\n    return (\n      <div class=\"body\">\n        {/*Part Header */}\n        <div class=\"part-header\">\n          <Header></Header>\n        </div>\n        <div class=\"container\">\n          {/*Part Content */}\n          <div class=\"row partCenter\">\n            <Switch>\n              <Route exact path=\"/\">\n                <div class=\"col-4 filter\">\n                  <Filter\n                    filter={this.getFilterCharacters}\n                    currentName={this.state.currentName}\n                    currentGender={this.state.currentGender}\n                    currentStatus={this.state.currentStatus}\n                    onChangeHandle={this.onChangeHandle}\n                  ></Filter>\n                </div>\n                <div class=\"col-8\">\n                  <Content\n                    boolFilter={this.state.boolFilter}\n                    getCharacters={this.state.charactersResults}\n                    filterCharacters={this.state.filterCharacters}\n                    info={this.state.characterInfo}\n                    characters={this.getCharacters}\n                    url={this.state.url}\n                    infos={this.getCharacterInfo}\n                  ></Content>\n                </div>\n              </Route>\n              <Route exact path=\"/episodes\">\n                <Episodes\n                  getEpisodesInfo={this.getEpisodesInfo}\n                  getAllEpisodes={this.getAllEpisodes}\n                  episodes={this.state.episodes}\n                  episodeInfo={this.state.episodeInfo}\n                >\n                  {\" \"}\n                </Episodes>\n              </Route>\n              <Route exact path=\"/about\">\n                <Aboutme></Aboutme>\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}